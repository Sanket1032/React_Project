{"ast":null,"code":"var _jsxFileName = \"D:\\\\free course site\\\\[GigaCourse.Com] Udemy - React - The Complete Guide (incl Hooks, React Router, Redux)\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expense.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport './Expense.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expense = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpense = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filteredContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No record found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 29\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      value: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), filteredExpense.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expense, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n\n_c = Expense;\nexport default Expense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"sources":["D:/free course site/[GigaCourse.Com] Udemy - React - The Complete Guide (incl Hooks, React Router, Redux)/01-starting-setup/src/components/Expenses/Expense.js"],"names":["ExpenseItem","Card","ExpenseFilter","useState","Expense","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpense","items","filter","expense","date","getFullYear","toString","filteredContent","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMK,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD;;AAGA,QAAMC,eAAe,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AAClD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACH,GAFuB,CAAxB;;AAGA,QAAMW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB;;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEX,YAAtB;AAAoC,MAAA,cAAc,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,eAAe,CAACQ,GAAhB,CAAoBL,OAAO,iBAAI,QAAC,WAAD;AAA8B,MAAA,KAAK,EAAEA,OAAO,CAACM,KAA7C;AAAoD,MAAA,MAAM,EAAEN,OAAO,CAACO,MAApE;AAA4E,MAAA,IAAI,EAAEP,OAAO,CAACC;AAA1F,OAAkBD,OAAO,CAACQ,EAA1B;AAAA;AAAA;AAAA;AAAA,YAA/B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvBD;;GAAMjB,O;;KAAAA,O;AAyBN,eAAeA,OAAf","sourcesContent":["import ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport './Expense.css';\r\nimport { useState } from 'react';\r\nconst Expense = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    }\r\n    const filteredExpense = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n    const filteredContent = <p>No record found</p>;\r\n\r\n    \r\n\r\n    return (\r\n        <Card className=\"expense\">\r\n            <ExpenseFilter value={filteredYear} onChangeFilter={filterChangeHandler} />\r\n            {filteredExpense.map(expense => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />)}\r\n            {/* <ExpenseItem title={props.items[0].title} amount={props.items[0].amount} date={props.items[0].date}></ExpenseItem>\r\n            <ExpenseItem title={props.items[1].title} amount={props.items[1].amount} date={props.items[1].date}></ExpenseItem>\r\n            <ExpenseItem title={props.items[2].title} amount={props.items[2].amount} date={props.items[2].date}></ExpenseItem>\r\n            <ExpenseItem title={props.items[3].title} amount={props.items[3].amount} date={props.items[3].date}></ExpenseItem> */}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expense;"]},"metadata":{},"sourceType":"module"}